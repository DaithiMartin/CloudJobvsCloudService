name: CICD for Cloud Function from Source with artifact registry and compute engine

# -----------------------------------------------------------------------------
# Environment variables
# -----------------------------------------------------------------------------
env:
  JOB_NAME: cloud-function
  REGION: us-west1
  PROJECT_ID: dulcet-equinox-444420-d8
  RUNTIME_SA: 'mldeploy@dulcet-equinox-444420-d8.iam.gserviceaccount.com'
  FUNCTIONS_DIR: ./cloudFunction
  ENTRY_POINT: hello_world

# -----------------------------------------------------------------------------
# Workflow Triggers
# -----------------------------------------------------------------------------
on:
  push:
    branches:
      - main
    paths:
      - 'cloudFunction/**'
      - '.github/workflows/cloud_function.yaml'
      - 'src/**'

# -----------------------------------------------------------------------------
# Jobs
# -----------------------------------------------------------------------------
jobs:
  build:
    name: Build and Push to Artifact Registry
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get-sha.outputs.sha }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: üîê Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
      - name: Get commit SHA
        id: get-sha
        run: echo "sha=$(echo ${GITHUB_SHA::7})" >> $GITHUB_OUTPUT
      - name: üõ†Ô∏è Build and Push Docker Image
        run: |
          IMAGE_URL="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.JOB_NAME }}/${{ env.JOB_NAME }}"
          docker build -t "${IMAGE_URL}:latest" -t "${IMAGE_URL}:${{ steps.get-sha.outputs.sha }}" -f ${{ env.ROOT_DIR }}/Dockerfile .
          docker push "${IMAGE_URL}:latest"
          docker push "${IMAGE_URL}:${{ steps.get-sha.outputs.sha }}"

  deploy:
    name: Deploy to Cloud Run Jobs
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: üîê Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: üöÄ Deploy to Cloud Run Jobs with Immutable Tag
        run: |

          # --- EXECUTION STEP ---
          gcloud run jobs deploy ${{ env.JOB_NAME }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.JOB_NAME }}/${{ env.JOB_NAME }}:${{ needs.build.outputs.image_tag }} \
            --region ${{ env.REGION }} \
            --quiet \
            --service-account "${{ env.RUNTIME_SA }}"

#jobs:
#  deploy-from-source:
#    name: üöÄ Deploy Function from Source
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      - name: üîê Authenticate to Google Cloud
#        uses: 'google-github-actions/auth@v2'
#        with:
#          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
#
#      - name: üöÄ Deploy to Cloud Functions
#        run: |
#          gcloud run deploy ${{ env.SERVICE_NAME }} \
#            --source ${{env.FUNCTIONS_DIR}} \
#            --function ${{ env.ENTRY_POINT }} \
#            --base-image python313 \
#            --region ${{ env.REGION }} \
#            --service-account "${{ env.RUNTIME_SA }}" \
#            --allow-unauthenticated